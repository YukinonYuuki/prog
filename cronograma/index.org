# -*- coding: utf-8 -*-"
#+STARTUP: overview indent
#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+SUBTITLE:
#+INFOJS_OPT:
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.2.2 (<a href="http://orgmode.org">Org</a> mode 9.0.1)
#+LATEX_HEADER:
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export
#+TAGS: noexport(n) deprecated(d)

* Planejamento                                                     :noexport:
** Preparação baseada em ODS                             :deprecated:ATTACH:
:PROPERTIES:
:Attachments: inf01202-cronograma.ods
:ID:       9848b48e-de8e-4fa3-8ac0-1a22ec9f9d39
:END:

#+begin_src R :results table :session :exports both :colnames yes
suppressMessages(library(tidyverse))
library(readODS)
FILE <- "data/98/48b48e-de8e-4fa3-8ac0-1a22ec9f9d39/inf01202-cronograma-2.ods"
read_ods(FILE, col_types=cols(
                   AULA = col_character(),
                   DATA = col_character(),
                   CONTEÚDO = col_character()
               )) %>%
    filter(AULA != "") %>%
    select(-DATA) %>%
    mutate(Setor = ifelse(grepl("P", AULA), "Prática", "Teórica")) %>%
#    mutate(Local = ifelse(Setor == "Prática", "43413.104", "43425.112")) %>%
    select(AULA, Setor, everything()) %>%
    rename(Descrição = CONTEÚDO) %>%
    mutate(Descrição = gsub("Prática: ", "", Descrição)) -> df.legacy;
df.legacy %>%
    filter(Setor == "Teórica") %>%
    select(-AULA)
#+end_src

#+RESULTS:
| Setor   | Descrição                                                                                                                               |
|---------+-----------------------------------------------------------------------------------------------------------------------------------------|
| Teórica | Apresentação  do  curso  e  da  disciplina  Aula  inaugural  dos  calouros Introdução:  paradigmas de programação, programa,  algoritmo |
| Teórica | Algoritmo: atribuição, entrada e saída Estrutura de programa C: scanf, printf                                                           |
| Teórica | Tipos de Dados, Declaração de variáveis, Operadores e expressão aritmética e lógica                                                     |
| Teórica | Comando de Seleção If                                                                                                                   |
| Teórica | Aninhamento de comandos If Else                                                                                                         |
| Teórica | Estrutura de seleção múltipla - comando switch                                                                                          |
| Teórica | Comando iterativo for                                                                                                                   |
| Teórica | Comandos iterativos while e do-while                                                                                                    |
| Teórica | Comandos iterativos while e do-while Exemplos                                                                                           |
| Teórica | Tipos estruturados básicos – arranjos de uma dimensão                                                                                   |
| Teórica | Classificação de vetores Strings: arranjos de caracteres                                                                                |
| Teórica | Arranjos com mais de uma dimensão: matrizes                                                                                             |
| Teórica | Busca e classificação em matrizes                                                                                                       |
| Teórica | Revisão Geral para Prova                                                                                                                |
| Teórica | 1ª Prova                                                                                                                                |
| Teórica | Subprogramação - variáveis locais e globais, parâmetros                                                                                 |
| Teórica | Função sem retorno (void): parâmetros formais e reais                                                                                   |
| Teórica | Parâmetros por valor e por referência, Ponteiros                                                                                        |
| Teórica | Ponteiros                                                                                                                               |
| Teórica | Funções com retorno.  Bubble sort                                                                                                       |
| Teórica | Estruturas e Definição de Tipos                                                                                                         |
| Teórica | Estruturas e parâmetros                                                                                                                 |
| Teórica | Stream Arquivos binários: acesso sequencial                                                                                             |
| Teórica | Arquivos binários: acesso randômico                                                                                                     |
| Teórica | Arquivo texto                                                                                                                           |
| Teórica | Arquivos texto exemplos                                                                                                                 |
| Teórica | Recursividade                                                                                                                           |
| Teórica | Estruturação de programas                                                                                                               |
| Teórica | Revisão para a segunda  prova                                                                                                           |
| Teórica | 2ª Prova                                                                                                                                |

#+begin_src R :results table :session :exports both :colnames yes
df.legacy %>%
    filter(Setor == "Prática") %>%
    select(-AULA)
#+end_src

#+RESULTS:
| Setor   | Descrição                                                     |
|---------+---------------------------------------------------------------|
| Prática | Introdução ao Moodle e ao compilador C                        |
| Prática | Programa sequencial  e comandos de seleção simples            |
| Prática | Exercicio if e if- else e switch extra-classe                 |
| Prática | comandos for e while                                          |
| Prática | comandos iterativos –– for e while com vetores                |
| Prática | comandos iterativos – while e do-while com strings e matrizes |
| Prática | Busca e classificação com matrizes                            |
| Prática | Apresentação do trabalho final                                |
| Prática | Funções sem retorno                                           |
| Prática | Funções parametrizadas com retorno e ponteiros                |
| Prática | estruturas                                                    |
| Prática | Arquivos binários                                             |
| Prática | Arquivos texto                                                |
| Prática | Recursividade                                                 |
| Prática | Apresentação de Trabalhos Finais                              |

** Modelo do cronograma em TEX                                      :ATTACH:
:PROPERTIES:
:Attachments: layout-cronograma.tex
:ID:       be43e1ff-0a91-4c3f-9e17-1fa62e6795ce
:END:

** Configuração das Aulas (em ORG, *COMECE AQUI*)

Toda e qualquer edição do ordenamento das aulas deve ser feito aqui.

A mescla entre aulas teóricas e práticas é feita automaticamente.

*** Teóricas

#+NAME: listagem_de_encontros_teoricos
#+header: :colnames yes
| Setor   | Descrição                                                       |
|---------+-----------------------------------------------------------------|
| Teórica | Apresentação, Introdução/Paradigmas/Programa/Algoritmo          |
| Teórica | Algoritmo: atribuição, entrada/saída Estrutura de programa C    |
| Teórica | Tipos, Declaração de variáveis, Operadores e Expr. Arit. e Lóg. |
| Teórica | Comando de Seleção If                                           |
| Teórica | Aninhamento de comandos If Else                                 |
| Teórica | Estrutura de seleção múltipla - comando switch                  |
| Teórica | Comando iterativo for                                           |
| Teórica | Comandos iterativos while e do-while                            |
| Teórica | Comandos iterativos while e do-while Exemplos                   |
| Teórica | Tipos estruturados básicos – arranjos de uma dimensão           |
| Teórica | Classificação de vetores Strings: arranjos de caracteres        |
| Teórica | Arranjos com mais de uma dimensão: matrizes                     |
| Teórica | Busca e classificação em matrizes                               |
| Teórica | Revisão Geral para Prova                                        |
| Teórica | 1ª Prova                                                        |
| Teórica | Subprogramação - variáveis locais e globais, parâmetros         |
| Teórica | Função sem retorno (void): parâmetros formais e reais           |
| Teórica | Parâmetros por valor e por referência, Ponteiros                |
| Teórica | Ponteiros, Funções com retorno                                  |
| Teórica | Estruturas e Definição de Tipos                                 |
| Teórica | Estruturas e parâmetros                                         |
| Teórica | Stream Arquivos binários: acesso sequencial                     |
| Teórica | Arquivos binários: acesso randômico                             |
| Teórica | Arquivo texto                                                   |
| Teórica | Arquivos texto exemplos                                         |
| Teórica | Recursividade                                                   |
| Teórica | Depuração de programas                                          |
| Teórica | Bubble sort e algoritmos avançados de ordenamento               |
| Teórica | Revisão para a segunda  prova                                   |
| Teórica | 2ª Prova                                                        |

*** Práticas

#+NAME: listagem_de_encontros_praticos
#+header: :colnames yes
| Setor   | Descrição                                                  |
|---------+------------------------------------------------------------|
| Prática | Introdução ao sistema EAD e ao compilador C                |
| Prática | Programa sequencial e comandos de seleção simples          |
| Prática | (EAD) Exercicio if, if-else, switch                        |
| Prática | Comandos for, while                                        |
| Prática | Comandos iterativos -- for e while                         |
| Prática | (EAD) Comandos iterativos -- while/do-while, vetor/strings |
| Prática | Busca e classificação com matrizes                         |
| Prática | Apresentação do trabalho final                             |
| Prática | Funções sem retorno                                        |
| Prática | Funções parametrizadas com retorno e ponteiros             |
| Prática | Estruturas                                                 |
| Prática | Arquivos binários                                          |
| Prática | Arquivos texto                                             |
| Prática | Recursividade                                              |
| Prática | Apresentação de Trabalhos Finais                           |

** Cronograma (para TEX)
*** Configurações
**** Dias letivos e onde os professores estão disponíveis

#+name: def_daysoff
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

daysOff <- c(
# /1
seq(ymd("2020-03-05"), ymd("2020-03-15"), by="days"), # (Grenoble)
seq(ymd("2020-03-16"), ymd("2020-03-22"), by="days"), # (Recover)
#ymd("2020-04-07"), # (Seminário Geofísica)
#ymd("2020-04-10"), # Religioso
                    # Sexta (aula prática será por EAD)
ymd("2020-04-11"), # Não letivo
#ymd("2020-04-15"), # (ERAD/RS)
#ymd("2020-04-16"), # (ERAD/RS)
ymd("2020-04-21"), # Tiradentes
#ymd("2020-05-01"), # Trabalho
                    # Sexta (aula prática será por EAD)
ymd("2020-05-16"), # Portas Abert
ymd("2020-06-11"), # Religioso
# /2
ymd("2020-09-07"), # Independência
seq(ymd("2020-09-14"), ymd("2020-09-18"), by="days"), # (SEMAC)
ymd("2020-09-20"), # Farroupilha
ymd("2020-10-12"), # Religioso
ymd("2020-10-28"), # Dia do Servidor Público
ymd("2020-11-02"), # Mortos
ymd("2020-11-15") # República
)
#+end_src

#+RESULTS: def_daysoff

**** Data de recuperação

#+name: def_recup
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

dataDaRecuperação <- ymd("2020-07-06");
#+end_src

#+RESULTS: def_recup

*** Geração
**** Datas onde há potencialmente encontros

#+name: def_dates
#+header: :var dep0=def_daysoff
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

dates <- tibble(Dia=seq(ymd("2020-03-05"), ymd("2020-07-15"), by="days")) %>%
    # Define o dia da semana
    mutate(DiaDaSemana = wday(Dia)) %>%
    # Remove dias onde não haverá aula
    filter(!(Dia %in% daysOff)) -> dias_disponiveis;

dias_disponiveis %>%    
    # Aulas teóricas em quais dias da semana (segunda = 2, terca = 3, ...)
    filter(DiaDaSemana %in% c(2, 4)) -> dates.teoricas;

dias_disponiveis %>%
    # Aulas práticas em quais dias da semana (sexta = 6, ...)
    filter(DiaDaSemana %in% c(6)) -> dates.praticas;
#+end_src

#+RESULTS: def_dates

**** Junta aulas teóricas com práticas

#+name: def_junta_praticas_teoricas
#+header: :var teoricas=listagem_de_encontros_teoricos
#+header: :var praticas=listagem_de_encontros_praticos
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

teoricas %>%
    mutate(Order = rep(1:15, each=2)) %>%
    bind_rows(praticas %>%
              mutate(Order = 1:15)) %>%
    arrange(Order, desc(Setor)) %>%
    select(-Order) %>%
    as_tibble() -> aulas;
#+end_src

#+RESULTS: def_junta_praticas_teoricas

**** Mapeamento das aulas sobre as datas

#+name: def_cronograma
#+header: :var dep0=def_recup
#+header: :var dep1=def_dates
#+header: :var dep2=def_junta_praticas_teoricas
#+begin_src R :results output :session :exports both
Sys.setlocale("LC_TIME","pt_BR.utf8") -> ignore
teoricas %>%
    # Associa as datas
    bind_cols(dates.teoricas %>% slice(1:nrow(teoricas))) %>%
    bind_rows(
        praticas %>%
        # Associa as datas (práticas)
        bind_cols(dates.praticas %>% slice(1:nrow(praticas)))) %>%
    # Coloca na ordem das datas
    arrange(Dia) %>%
    # Converte as datas para caracter
    mutate(Encontro = as.character(Dia)) %>%
    # Ordena as aulas
    mutate(N = 1:nrow(.)) %>%
    group_by(Setor) %>%
    mutate(O = 1:n()) %>%
    ungroup %>%
    mutate(DiaDaSemana = weekdays(as.Date(Encontro))) -> cronograma;
Sys.setlocale("LC_TIME","en_US.utf8") -> ignore;
#+end_src

#+RESULTS: def_cronograma
: 
: Warning message:
: In Sys.setlocale("LC_TIME", "pt_BR.utf8") :
:   OS reports request to set locale to "pt_BR.utf8" cannot be honored

*** Exporta cronograma em TEX

#+name: def_cronograma_tex
#+header: :var dep0=def_cronograma
#+begin_src R :results output :session :exports both
cronograma %>%
    group_by(Setor) %>%
    mutate(O = case_when(Setor == "Prática" ~ paste0("P", 1:n()),
                         TRUE ~ "")) %>%
    ungroup %>%
    mutate(Setor = case_when(Setor == "Teórica" ~ "",
                             TRUE ~ .$Setor)) %>%
    select(N, Encontro, O, Setor, Descrição) %>%
    as.data.frame() %>%
    xtable(., align = "rrlllp{12cm}") %>%
    print (print.results=FALSE,
           booktabs = TRUE,
           include.rownames=FALSE,
           tabular.environment = 'longtable',
           floating = FALSE) %>%
    as.character -> cronograma.tex;
#+end_src

#+RESULTS: def_cronograma_tex

** Cronograma (em PDF)

#+name: modelo_cronograma
#+header: :var dep0=def_cronograma_tex
#+begin_src R :results output :session :exports both
cronograma.modelo.filename = "data/be/43e1ff-0a91-4c3f-9e17-1fa62e6795ce/layout-cronograma.tex"
cronograma.modelo = readChar(cronograma.modelo.filename, file.info(cronograma.modelo.filename)$size);
turma = "I e J";
semestre = "2020/1 -- Outono";
cronograma.modelo <- gsub("TURMA", turma, cronograma.modelo);
cronograma.modelo <- gsub("SEMESTRE", semestre, cronograma.modelo);
cronograma.modelo <- gsub("TABELA", gsub("\\\\", "\\\\\\\\", cronograma.tex), cronograma.modelo);
write(cronograma.modelo, "cronograma.tex");
system2("rm", "-f cronograma.pdf")
system2("rubber", " --pdf cronograma.tex")
#+end_src

#+RESULTS: modelo_cronograma
: 
: compiling cronograma.tex...
: compiling cronograma.tex...

* Cronograma

O cronograma também está [[./cronograma.pdf][disponível em formato PDF]].

#+header: :var dep=def_cronograma
#+begin_src R :results value table :session :exports output :colnames yes
cronograma %>%
    select(N, Encontro, Setor, Descrição) %>%
    mutate(Setor = case_when(Setor == "Prática" ~ "*Prática*",
                             TRUE ~ .$Setor)) %>%
    as.data.frame
#+end_src

#+RESULTS:
|  N |   Encontro | Setor   | Descrição                                                       |
|----+------------+---------+-----------------------------------------------------------------|
|  1 | 2020-03-23 | Teórica | Apresentação, Introdução/Paradigmas/Programa/Algoritmo          |
|  2 | 2020-03-25 | Teórica | Algoritmo: atribuição, entrada/saída Estrutura de programa C    |
|  3 | 2020-03-27 | *Prática* | Introdução ao sistema EAD e ao compilador C                     |
|  4 | 2020-03-30 | Teórica | Tipos, Declaração de variáveis, Operadores e Expr. Arit. e Lóg. |
|  5 | 2020-04-01 | Teórica | Comando de Seleção If                                           |
|  6 | 2020-04-03 | *Prática* | Programa sequencial e comandos de seleção simples               |
|  7 | 2020-04-06 | Teórica | Aninhamento de comandos If Else                                 |
|  8 | 2020-04-08 | Teórica | Estrutura de seleção múltipla - comando switch                  |
|  9 | 2020-04-10 | *Prática* | (EAD) Exercicio if, if-else, switch                             |
| 10 | 2020-04-13 | Teórica | Comando iterativo for                                           |
| 11 | 2020-04-15 | Teórica | Comandos iterativos while e do-while                            |
| 12 | 2020-04-17 | *Prática* | Comandos for, while                                             |
| 13 | 2020-04-20 | Teórica | Comandos iterativos while e do-while Exemplos                   |
| 14 | 2020-04-22 | Teórica | Tipos estruturados básicos – arranjos de uma dimensão           |
| 15 | 2020-04-24 | *Prática* | Comandos iterativos -- for e while                              |
| 16 | 2020-04-27 | Teórica | Classificação de vetores Strings: arranjos de caracteres        |
| 17 | 2020-04-29 | Teórica | Arranjos com mais de uma dimensão: matrizes                     |
| 18 | 2020-05-01 | *Prática* | (EAD) Comandos iterativos -- while/do-while, vetor/strings      |
| 19 | 2020-05-04 | Teórica | Busca e classificação em matrizes                               |
| 20 | 2020-05-06 | Teórica | Revisão Geral para Prova                                        |
| 21 | 2020-05-08 | *Prática* | Busca e classificação com matrizes                              |
| 22 | 2020-05-11 | Teórica | 1ª Prova                                                        |
| 23 | 2020-05-13 | Teórica | Subprogramação - variáveis locais e globais, parâmetros         |
| 24 | 2020-05-15 | *Prática* | Apresentação do trabalho final                                  |
| 25 | 2020-05-18 | Teórica | Função sem retorno (void): parâmetros formais e reais           |
| 26 | 2020-05-20 | Teórica | Parâmetros por valor e por referência, Ponteiros                |
| 27 | 2020-05-22 | *Prática* | Funções sem retorno                                             |
| 28 | 2020-05-25 | Teórica | Ponteiros, Funções com retorno                                  |
| 29 | 2020-05-27 | Teórica | Estruturas e Definição de Tipos                                 |
| 30 | 2020-05-29 | *Prática* | Funções parametrizadas com retorno e ponteiros                  |
| 31 | 2020-06-01 | Teórica | Estruturas e parâmetros                                         |
| 32 | 2020-06-03 | Teórica | Stream Arquivos binários: acesso sequencial                     |
| 33 | 2020-06-05 | *Prática* | Estruturas                                                      |
| 34 | 2020-06-08 | Teórica | Arquivos binários: acesso randômico                             |
| 35 | 2020-06-10 | Teórica | Arquivo texto                                                   |
| 36 | 2020-06-12 | *Prática* | Arquivos binários                                               |
| 37 | 2020-06-15 | Teórica | Arquivos texto exemplos                                         |
| 38 | 2020-06-17 | Teórica | Recursividade                                                   |
| 39 | 2020-06-19 | *Prática* | Arquivos texto                                                  |
| 40 | 2020-06-22 | Teórica | Depuração de programas                                          |
| 41 | 2020-06-24 | Teórica | Bubble sort e algoritmos avançados de ordenamento               |
| 42 | 2020-06-26 | *Prática* | Recursividade                                                   |
| 43 | 2020-06-29 | Teórica | Revisão para a segunda  prova                                   |
| 44 | 2020-07-01 | Teórica | 2ª Prova                                                        |
| 45 | 2020-07-03 | *Prática* | Apresentação de Trabalhos Finais                                |


#+header: :var dep0=def_recup
#+begin_src R :results value table :session :exports output :colnames yes
tribble(~"*Prova de Recuperação (PR)*",
        dataDaRecuperação)
#+end_src

#+RESULTS:
| *Prova de Recuperação (PR)* |
|---------------------------|
|                2020-07-06 |
