# -*- coding: utf-8 -*-"
#+STARTUP: overview indent
#+OPTIONS: html-link-use-abs-url:nil html-postamble:auto
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+DESCRIPTION:
#+KEYWORDS:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+SUBTITLE:
#+INFOJS_OPT:
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 25.2.2 (<a href="http://orgmode.org">Org</a> mode 9.0.1)
#+LATEX_HEADER:
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export
#+TAGS: noexport(n) deprecated(d)

* Prepara√ß√£o baseada em ODS                               :deprecated:ATTACH:
:PROPERTIES:
:Attachments: inf01202-cronograma.ods
:ID:       9848b48e-de8e-4fa3-8ac0-1a22ec9f9d39
:END:

#+begin_src R :results table :session :exports both :colnames yes
suppressMessages(library(tidyverse))
library(readODS)
FILE <- "data/98/48b48e-de8e-4fa3-8ac0-1a22ec9f9d39/inf01202-cronograma-2.ods"
read_ods(FILE, col_types=cols(
                   AULA = col_character(),
                   DATA = col_character(),
                   CONTE√öDO = col_character()
               )) %>%
    filter(AULA != "") %>%
    select(-DATA) %>%
    mutate(Setor = ifelse(grepl("P", AULA), "Pr√°tica", "Te√≥rica")) %>%
#    mutate(Local = ifelse(Setor == "Pr√°tica", "43413.104", "43425.112")) %>%
    select(AULA, Setor, everything()) %>%
    rename(Descri√ß√£o = CONTE√öDO) %>%
    mutate(Descri√ß√£o = gsub("Pr√°tica: ", "", Descri√ß√£o)) -> df.legacy;
df.legacy %>%
    filter(Setor == "Te√≥rica") %>%
    select(-AULA)
#+end_src

#+RESULTS:
| x    |
|------|
| TRUE |

#+begin_src R :results table :session :exports both :colnames yes
df.legacy %>%
    filter(Setor == "Pr√°tica") %>%
    select(-AULA)
#+end_src

#+RESULTS:
| Setor   | Descri√ß√£o                                                     |
|---------+---------------------------------------------------------------|
| Pr√°tica | Introdu√ß√£o ao Moodle e ao compilador C                        |
| Pr√°tica | Programa sequencial  e comandos de sele√ß√£o simples            |
| Pr√°tica | Exercicio if e if- else e switch extra-classe                 |
| Pr√°tica | comandos for e while                                          |
| Pr√°tica | comandos iterativos ‚Äì‚Äì for e while com vetores                |
| Pr√°tica | comandos iterativos ‚Äì while e do-while com strings e matrizes |
| Pr√°tica | Busca e classifica√ß√£o com matrizes                            |
| Pr√°tica | Apresenta√ß√£o do trabalho final                                |
| Pr√°tica | Fun√ß√µes sem retorno                                           |
| Pr√°tica | Fun√ß√µes parametrizadas com retorno e ponteiros                |
| Pr√°tica | estruturas                                                    |
| Pr√°tica | Arquivos bin√°rios                                             |
| Pr√°tica | Arquivos texto                                                |
| Pr√°tica | Recursividade                                                 |
| Pr√°tica | Apresenta√ß√£o de Trabalhos Finais                              |

* Planejamento                                                     :noexport:
** Modelo do cronograma em TEX                                      :ATTACH:
:PROPERTIES:
:Attachments: layout-cronograma.tex
:ID:       be43e1ff-0a91-4c3f-9e17-1fa62e6795ce
:END:

** Configura√ß√£o das Aulas (em ORG, *COMECE AQUI*)

Toda e qualquer edi√ß√£o do ordenamento das aulas deve ser feito aqui.

A mescla entre aulas te√≥ricas e pr√°ticas √© feita automaticamente.

*** Te√≥ricas

#+NAME: listagem_de_encontros_teoricos
#+header: :colnames yes
| Setor   | Descri√ß√£o                                    |
|---------+----------------------------------------------|
| Te√≥rica | Apresenta√ß√£o da disciplina, Introdu√ß√£o Geral |
| Te√≥rica | Estrutura de um Programa em C                |
| Te√≥rica | Tipos de vari√°veis, express√µes aritm√©ticas   |
| Te√≥rica | Comandos if e express√µes l√≥gicas             |
| Te√≥rica | Comandos if-else aninhados                   |
| Te√≥rica | Estrutura de sele√ß√£o m√∫ltipla switch-case    |
| Te√≥rica | Comando iterativo for                        |
| Te√≥rica | Comando iterativo for (bis)                  |
| Te√≥rica | Comando iterativo while                      |
| Te√≥rica | Arranjos unidimensionais (vetores)           |
| Te√≥rica | Strings                                      |
| Te√≥rica | Arranjos multidimensionais (matrizes)        |
| Te√≥rica | Estudos de Caso com Matrizes                 |
| Te√≥rica | (Fechamento Notas AP1, An√∫ncio do TF)        |
| Te√≥rica | (Recupera√ß√£o AP1)                            |
| Te√≥rica | Subprogramas e Fun√ß√µes                       |
| Te√≥rica | Fun√ß√µes e seus Par√¢metros                    |
| Te√≥rica | Refer√™ncias e Ponteiros                      |
| Te√≥rica | Ponteiros, Passagem de Matrizes              |
| Te√≥rica | Ordenamento Bolha                            |
| Te√≥rica | Estruturas I                                 |
| Te√≥rica | Estruturas II                                |
| Te√≥rica | Arquivo Bin√°rio I (acesso sequencial)        |
| Te√≥rica | Arquivo Bin√°rio II (acesso aleat√≥rio)        |
| Te√≥rica | Arquivo Texto I (vis√£o geral)                |
| Te√≥rica | Arquivo Texto II (convers√£o/tokens)          |
| Te√≥rica | Recursividade                                |
| Te√≥rica | Depura√ß√£o de programas                       |
| Te√≥rica | (Apresenta√ß√£o dos trabalhos finais)          |
| Te√≥rica | (Fechamento Notas AP2, TF)                   |
| Te√≥rica | (Recupera√ß√£o MF)                             |

*** Pr√°ticas

#+NAME: listagem_de_encontros_praticos
#+header: :colnames yes
| Setor   | Descri√ß√£o                                   |
|---------+---------------------------------------------|
| Pr√°tica | Introdu√ß√£o ao sistema EAD e ao compilador C |
| Pr√°tica | Programa sequencial                         |
| Pr√°tica | Comandos if e if-else                       |
| Pr√°tica | Comandos switch e for                       |
| Pr√°tica | Comandos for e while                        |
| Pr√°tica | Vetor e Strings                             |
| Pr√°tica | Busca e classifica√ß√£o com matrizes          |
| Pr√°tica |                                             |
| Pr√°tica | Fun√ß√µes                                     |
| Pr√°tica | Refer√™ncias e Ponteiros                     |
| Pr√°tica | Estruturas                                  |
| Pr√°tica | Arquivos bin√°rios                           |
| Pr√°tica | Arquivos texto                              |
| Pr√°tica | Recursividade                               |

** Cronograma (para TEX)
*** Configura√ß√µes
**** Dias letivos e onde os professores est√£o dispon√≠veis

#+name: def_daysoff
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

daysOff <- c(
# /1
#ymd("2020-04-10"), # Religioso
                    # Sexta (aula pr√°tica ser√° por EAD)
#ymd("2020-04-11"), # N√£o letivo
#ymd("2020-04-15"), # (ERAD/RS)
#ymd("2020-04-16"), # (ERAD/RS)
#ymd("2020-04-21"), # Tiradentes
#ymd("2020-05-01"), # Trabalho
                    # Sexta (aula pr√°tica ser√° por EAD)
#ymd("2020-05-16"), # Portas Abert
#ymd("2020-06-11"), # Religioso
# /2
#ymd("2020-09-07"), # Independ√™ncia
#seq(ymd("2020-09-14"), ymd("2020-09-18"), by="days"), # (SEMAC)
#ymd("2020-09-20"), # Farroupilha
#ymd("2020-10-12"), # Religioso
#ymd("2020-10-28"), # Dia do Servidor P√∫blico
#ymd("2020-11-02"), # Mortos
#ymd("2020-11-15") # Rep√∫blica
)
#+end_src

#+RESULTS: def_daysoff

**** Data de recupera√ß√£o

#+name: def_recup
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

dataDaRecupera√ß√£o <- ymd("2020-12-01");
#+end_src

#+RESULTS: def_recup

*** Gera√ß√£o
**** Datas onde h√° potencialmente encontros

#+name: def_dates
#+header: :var dep0=def_daysoff
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

dates <- tibble(Dia=seq(ymd("2021-01-25"), ymd("2021-05-29"), by="days")) %>%
    # Define o dia da semana
    mutate(DiaDaSemana = wday(Dia)) %>%
    # Remove dias onde n√£o haver√° aula
    filter(!(Dia %in% daysOff)) -> dias_disponiveis;

dias_disponiveis %>%    
    # Aulas te√≥ricas em quais dias da semana (segunda = 2, terca = 3, ...)
    filter(DiaDaSemana %in% c(2, 4)) -> dates.teoricas;

dias_disponiveis %>%
    # Aulas pr√°ticas em quais dias da semana (sexta = 6, ...)
    filter(DiaDaSemana %in% c(5)) -> dates.praticas;
#+end_src

#+RESULTS: def_dates

**** Junta aulas te√≥ricas com pr√°ticas

#+name: def_junta_praticas_teoricas
#+header: :var teoricas=listagem_de_encontros_teoricos
#+header: :var praticas=listagem_de_encontros_praticos
#+begin_src R :results output :session :exports both
suppressMessages(library(lubridate));
suppressMessages(library(tidyverse));
suppressMessages(library(xtable));

teoricas %>%
    mutate(Order = rep(1:15, each=2)) %>%
    bind_rows(praticas %>%
              mutate(Order = 1:15)) %>%
    arrange(Order, desc(Setor)) %>%
    select(-Order) %>%
    as_tibble() -> aulas;
#+end_src

#+RESULTS: def_junta_praticas_teoricas
: 
: Error: Problem with `mutate()` input `Order`.
: [31m‚úñ[39m Input `Order` can't be recycled to size 14.
: [34m‚Ñπ[39m Input `Order` is `1:15`.
: [34m‚Ñπ[39m Input `Order` must be size 14 or 1, not 15.
: [90mRun `rlang::last_error()` to see where the error occurred.[39m

**** Mapeamento das aulas sobre as datas

#+name: def_cronograma
#+header: :var dep0=def_recup
#+header: :var dep1=def_dates
#+header: :var dep2=def_junta_praticas_teoricas
#+begin_src R :results output :session :exports both
Sys.setlocale("LC_TIME","pt_BR.utf8") -> ignore
teoricas %>%
    # Associa as datas
    bind_cols(dates.teoricas %>% slice(1:nrow(teoricas))) %>%
    bind_rows(
        praticas %>%
        # Associa as datas (pr√°ticas)
        bind_cols(dates.praticas %>% slice(1:nrow(praticas)))) %>%
    # Coloca na ordem das datas
    arrange(Dia) %>%
    # Converte as datas para caracter
    mutate(Encontro = as.character(Dia)) %>%
    # Ordena as aulas
    mutate(N = 1:nrow(.)) %>%
    group_by(Setor) %>%
    mutate(O = 1:n()) %>%
    ungroup %>%
    mutate(DiaDaSemana = weekdays(as.Date(Encontro))) -> cronograma;
Sys.setlocale("LC_TIME","en_US.utf8") -> ignore;
#+end_src

#+RESULTS: def_cronograma
: 
: Warning message:
: In Sys.setlocale("LC_TIME", "pt_BR.utf8") :
:   OS reports request to set locale to "pt_BR.utf8" cannot be honored

*** Exporta cronograma em TEX
**** New

#+name: def_cronograma_tex
#+header: :var dep0=def_cronograma
#+begin_src R :results output :session :exports both
options(crayon.enabled=FALSE)
cronograma %>%
    mutate(Semana = lead(week(Dia))) %>%
    mutate(Semana = ifelse(is.na(Semana), max(week(Dia))+1, Semana)) %>%
    mutate(Semana = as.integer(Semana - min(Semana)+1)) %>%
    mutate(DiaDaSemana = ifelse(DiaDaSemana == "Friday", "Sexta", "")) %>%
    mutate(S√≠ncrono = ifelse(Setor == "Pr√°tica", "Sim", "")) %>%
    mutate(Encontro = ifelse(S√≠ncrono == "Sim", Encontro, "")) %>%
    mutate(Setor = case_when(Setor == "Te√≥rica" ~ "", TRUE ~ .$Setor)) %>%
    mutate(N = 1:n()) %>%
    slice(-23) %>%
    group_by(Setor) %>%
    mutate(O = case_when(Setor == "Pr√°tica" & Descri√ß√£o != "" ~ paste0("P", 1:n()), TRUE ~ "")) %>%
    ungroup %>%
    mutate(N = 1:n()) %>%
    select(N, Semana, Data = Encontro, Dia = DiaDaSemana, S√≠ncrono, O, Descri√ß√£o) -> cronograma.output
cronograma.output %>%
    as.data.frame() %>%
    xtable(., align = "rrrrllll") %>%
    print (print.results=FALSE,
           booktabs = TRUE,
           include.rownames=FALSE,
           tabular.environment = 'longtable',
           floating = FALSE) %>%
    as.character -> cronograma.tex;    
#+end_src

#+RESULTS:

**** Deprecated


#+begin_src R :results output :session :exports both
cronograma %>%
    group_by(Setor) %>%
    mutate(O = case_when(Setor == "Pr√°tica" ~ paste0("P", 1:n()), TRUE ~ "")) %>%
    ungroup %>%
    mutate(Setor = case_when(Setor == "Te√≥rica" ~ "", TRUE ~ .$Setor)) %>%
    select(N, Encontro, O, Setor, Descri√ß√£o) %>%
    as.data.frame() %>%
    xtable(., align = "rrlllp{12cm}") %>%
    print (print.results=FALSE,
           booktabs = TRUE,
           include.rownames=FALSE,
           tabular.environment = 'longtable',
           floating = FALSE) %>%
    as.character -> cronograma.tex;
#+end_src

#+RESULTS:

#+RESULTS: def_cronograma_tex

** Cronograma (em PDF)

#+name: modelo_cronograma
#+header: :var dep0=def_cronograma_tex
#+begin_src R :results output :session :exports both
cronograma.modelo.filename = "data/be/43e1ff-0a91-4c3f-9e17-1fa62e6795ce/layout-cronograma.tex"
cronograma.modelo = readChar(cronograma.modelo.filename, file.info(cronograma.modelo.filename)$size);
turma = "C/D";
semestre = "ERE 2020/2";
cronograma.modelo <- gsub("TURMA", turma, cronograma.modelo);
cronograma.modelo <- gsub("SEMESTRE", semestre, cronograma.modelo);
cronograma.modelo <- gsub("TABELA", gsub("\\\\", "\\\\\\\\", cronograma.tex), cronograma.modelo);
write(cronograma.modelo, "cronograma.tex");
system2("rm", "-f cronograma.pdf")
system2("rubber", " --pdf cronograma.tex")
#+end_src

* Cronograma

O cronograma tamb√©m est√° [[./cronograma.pdf][dispon√≠vel em formato PDF]].

#+header: :var dep=def_cronograma
#+begin_src R :results value table :session :exports output :colnames yes
cronograma.output %>%
    as.data.frame
#+end_src

#+RESULTS:
|  N | Semana |       Data | Dia   | S√≠ncrono | O   | Descri√ß√£o                                    |
|----+--------+------------+-------+----------+-----+----------------------------------------------|
|  1 |      1 |            |       |          |     | Apresenta√ß√£o da disciplina, Introdu√ß√£o Geral |
|  2 |      1 | 2020-08-21 | Sexta | Sim      | P1  | Introdu√ß√£o ao sistema EAD e ao compilador C  |
|  3 |      2 |            |       |          |     | Estrutura de um Programa em C                |
|  4 |      2 |            |       |          |     | Tipos de vari√°veis, express√µes aritm√©ticas   |
|  5 |      2 | 2020-08-28 | Sexta | Sim      | P2  | Programa sequencial                          |
|  6 |      3 |            |       |          |     | Comandos if e express√µes l√≥gicas             |
|  7 |      3 |            |       |          |     | Comandos if-else aninhados                   |
|  8 |      3 | 2020-09-04 | Sexta | Sim      | P3  | Comandos if e if-else                        |
|  9 |      4 |            |       |          |     | Estrutura de sele√ß√£o m√∫ltipla switch-case    |
| 10 |      4 |            |       |          |     | Comando iterativo for                        |
| 11 |      4 | 2020-09-11 | Sexta | Sim      | P4  | Comandos switch e for                        |
| 12 |      5 |            |       |          |     | Comando iterativo for (bis)                  |
| 13 |      5 |            |       |          |     | Comando iterativo while                      |
| 14 |      5 | 2020-09-18 | Sexta | Sim      | P5  | Comandos for e while                         |
| 15 |      6 |            |       |          |     | Arranjos unidimensionais (vetores)           |
| 16 |      6 |            |       |          |     | Strings                                      |
| 17 |      6 | 2020-09-25 | Sexta | Sim      | P6  | Vetor e Strings                              |
| 18 |      7 |            |       |          |     | Arranjos multidimensionais (matrizes)        |
| 19 |      7 |            |       |          |     | Estudos de Caso com Matrizes                 |
| 20 |      7 | 2020-10-02 | Sexta | Sim      | P7  | Busca e classifica√ß√£o com matrizes           |
| 21 |      8 |            |       |          |     | (Fechamento Notas AP1, An√∫ncio do TF)        |
| 22 |      8 |            |       |          |     | (Recupera√ß√£o AP1)                            |
| 23 |      9 |            |       |          |     | Subprogramas e Fun√ß√µes                       |
| 24 |      9 |            |       |          |     | Fun√ß√µes e seus Par√¢metros                    |
| 25 |      9 | 2020-10-16 | Sexta | Sim      | P8  | Fun√ß√µes                                      |
| 26 |     10 |            |       |          |     | Refer√™ncias e Ponteiros                      |
| 27 |     10 |            |       |          |     | Ponteiros, Passagem de Matrizes              |
| 28 |     10 | 2020-10-23 | Sexta | Sim      | P9  | Refer√™ncias e Ponteiros                      |
| 29 |     11 |            |       |          |     | Ordenamento Bolha, Estruturas I              |
| 30 |     11 |            |       |          |     | Estruturas II                                |
| 31 |     11 | 2020-10-30 | Sexta | Sim      | P10 | Estruturas                                   |
| 32 |     12 |            |       |          |     | Arquivo Bin√°rio I (acesso sequencial)        |
| 33 |     12 |            |       |          |     | Arquivo Bin√°rio II (acesso aleat√≥rio)        |
| 34 |     12 | 2020-11-06 | Sexta | Sim      | P11 | Arquivos bin√°rios                            |
| 35 |     13 |            |       |          |     | Arquivo Texto I (vis√£o geral)                |
| 36 |     13 |            |       |          |     | Arquivo Texto II (convers√£o/tokens)          |
| 37 |     13 | 2020-11-13 | Sexta | Sim      | P12 | Arquivos texto                               |
| 38 |     14 |            |       |          |     | Recursividade                                |
| 39 |     14 |            |       |          |     | Depura√ß√£o de programas                       |
| 40 |     14 | 2020-11-20 | Sexta | Sim      | P13 | Recursividade                                |
| 41 |     15 |            |       |          |     | (Apresenta√ß√£o dos trabalhos finais)          |
| 42 |     15 |            |       |          |     | (Fechamento Notas AP2, TF)                   |
| 43 |     16 |            |       |          |     | (Recupera√ß√£o MF)                             |

#+begin_src R :results value table :session :exports output :colnames yes
cronograma %>%
    filter(grepl("Recupera√ß√£o", Descri√ß√£o)) %>%
    select(Dia, Descri√ß√£o)
#+end_src

#+RESULTS:
|        Dia | Descri√ß√£o         |
|------------+-------------------|
| 2020-10-07 | (Recupera√ß√£o AP1) |
| 2020-11-30 | (Recupera√ß√£o MF)  |
