# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Algoritmos
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS: title:nil H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}

#+latex: \newcommand{\mytitle}{Comando iterativo =for=}
#+latex: \mytitleslide

* Configuração                                                     :noexport:

#+BEGIN_SRC emacs-lisp
(setq org-latex-listings 'minted
      org-latex-packages-alist '(("" "minted"))
      org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
(setq org-latex-minted-options
       '(("frame" "lines")
         ("fontsize" "\\scriptsize")))
#+END_SRC

#+RESULTS:
| frame    | lines       |
| fontsize | \scriptsize |
* Sumário

Laços iterativos (/loops/)
- Motivação com exemplos
- O comando =for=
- Um exemplo

* Motivação com enunciado (1 aluno)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_06.pdf}{Prof. Claudio Jung}

* Possível solução

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_05.pdf}{Prof. Mara Abel}

* Motivação com enunciado (turma de 5 alunos)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_09.pdf}{Prof. Claudio Jung}

* Possível solução

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_06.pdf}{Prof. Mara Abel}

* Uma versão melhorada com menos variáveis

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_25.pdf}{Prof. Edison Pignaton de Freitas}

* Uma versão ainda melhor, com menos código!

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_08.pdf}{Prof. Mara Abel}

* Laços de repetição

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_27.pdf}{Prof. Edison Pignaton de Freitas}

* Contexto: três laços de repetição na Linguagem C

#+BEGIN_CENTER
~for~ (para); ~while~ (enquanto); ~do while~ (faça enquanto)
#+END_CENTER

#+latex: \vfill

Começaremos com o:

#+BEGIN_CENTER
~for~ (para)
#+END_CENTER

* O comando =for=

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_15.pdf}{Prof. Claudio Jung}

* Detalhamento

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_16.pdf}{Prof. Claudio Jung}

* Sintaxe

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_30.pdf}{Prof. Edison Pignaton de Freitas}
#+latex: %\cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_17.pdf}{Prof. Claudio Jung}

_Nota_: Todas as expressões do comando =for= são opcionais.

* Voltando ao algoritmo do exemplo #1 motivacional

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_32.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #1: Em C

Com comando de incremento
- Do valor 1 até menor igual que 5

#+BEGIN_SRC C :tangle e/a07-for-aprovado-reprovado.c
// Determina se 5 alunos foram aprovados ou reprovados
#include <stdio.h>
int main() {
  int contador, numaluno;
  float media;
  // Controle de repetição: executará 5 vezes
  for(contador = 1; contador <= 5; contador++) {
    // Comandos a serem repetidos
    printf("Informe numero e nota do aluno %d: ", contador);
    scanf("%d", &numaluno);
    scanf("%f", &media);
    if (media >=6)
      printf("O aluno %d foi aprovado!\n", numaluno);
    else
      printf("O aluno %d for reprovado!\n", numaluno);
  }
  return 0;
}
#+END_SRC

* Exemplo #1: Em C (decremento)

Com comando de _decremento_
- Do valor 5 até o maior que 0

#+BEGIN_SRC C :tangle e/a07-for-aprovado-reprovado-dec.c
// Determina se 5 alunos foram aprovados ou reprovados
#include <stdio.h>
int main() {
  int contador, numaluno;
  float media;
  // Controle de repetição: executará 5 vezes
  for(contador = 5; contador > 0; contador--) {
    // Comandos a serem repetidos
    printf("Informe numero e nota do aluno %d: ", contador);
    scanf("%d", &numaluno);
    scanf("%f", &media);
    if (media >=6)
      printf("O aluno %d foi aprovado!\n", numaluno);
    else
      printf("O aluno %d for reprovado!\n", numaluno);
  }
  return 0;
}
#+END_SRC
