# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Algoritmos
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS: title:nil H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{systeme}

#+latex: \newcommand{\mytitle}{Ordenamento por Bolha}
#+latex: \mytitleslide

* Motivação

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_01.pdf}{Prof. Claudio Jung}

* Ordenamento pelo Método da Bolha

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_02.pdf}{Prof. Claudio Jung}

* Video!

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_03.pdf}{Prof. Claudio Jung}

* Exemplo com três varreduras

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_04.pdf}{Prof. Claudio Jung}

* Código!

Variáveis
- ~sinal~, com o valor 0 antes de cada varredura (recebe 1 se trocar)
- ~aux~, para fazer uma troca

#+latex: \pause

#+BEGIN_SRC C :tangle e/a29-bolha.c
#define TAM 6
void ordena_pela_bolha (int *v, int tamanho) {
  int i, sinal, aux;
  do {
    sinal = 0;
    for (i = 0; i < tamanho-1; i++)
      if (v[i] > v[i+1]) {
	aux = v[i];
	v[i] = v[i+1];
	v[i+1] = aux;
	sinal = 1;
      }
  } while (sinal == 1);
}
#+end_src
#+latex:\pause
#+BEGIN_SRC C :tangle e/a29-bolha.c
int vetor[TAM] = {5, 3, 4, 1, 9, 8};
ordena_pela_bolha(vetor, TAM);
for(int i = 0; i < TAM; i++)
  printf("%d ", *(vetor+i));
#+END_SRC

* Código! Versão melhorada!

Variáveis
- ~fim~, indica até onde o vetor ainda não está ordenado
  - veja que o maior elemento do subarranjo inicial é sempre colocado
    no final dele apos cada varredura

#+BEGIN_SRC C :tangle e/a29-bolha-melhor.c :main no :includes "<stdio.h>"
#define TAM 6
void ordena_pela_bolha (int *v, int tamanho) {
  int i, sinal, aux, fim;
  fim = tamanho - 1;
  do {
    sinal = 0;
    for (i = 0; i < fim; i++)
      if (v[i] > v[i+1]) {
	aux = v[i];
	v[i] = v[i+1];
	v[i+1] = aux;
	sinal = 1;
      }
    fim--;
  } while (sinal == 1);
}
#+end_src

* Exercício #1 (ordenamento + busca)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_01.pdf}{Prof. Claudio Jung}

* Comentários                                                      :noexport:

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_11.pdf}{Prof. Claudio Jung}
* Exercício #2 (ordenar matriz de strings)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula20-exercicios_ponteiros_arrays_slide_18.pdf}{Prof. Claudio Jung}
