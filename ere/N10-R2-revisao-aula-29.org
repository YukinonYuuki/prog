# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Algoritmos
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS: title:nil H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{systeme}

#+latex: \newcommand{\mytitle}{Revisão Aula 29}
#+latex: \mytitleslide

* Exercício #1 (passagem de matrizes)

#+latex: \cortesia{../../../Algoritmos/Marcelo/aulas/aula19/aula19_slide_19.pdf}{Prof. Marcelo Walter}

* (#1) Código (passagem de matrizes)

Enunciado simplificado, matriz é sempre de tamanho 5\times5.
- Não há leitura de usuário

#+latex: \vspace{-0.3cm}\begin{multicols}{2}
#+BEGIN_SRC C :tangle e/rev-a29-passagem-matriz.c
#include <stdio.h>
#include <stdlib.h>
#define LINHAS 5
#define COLUNAS 5
#define MIN 100
#define MAX 200
void le (int mat[][COLUNAS]) {
  int i, j;
  srand(0);
  for (i = 0; i < LINHAS; i++)
    for (j = 0; j < COLUNAS; j++)
      ,*(mat[0] + i * COLUNAS + j) =
	MIN+(rand()%(MAX-MIN+1));
}
void imprime (int mat[][COLUNAS],
	      char *str) {
  int i, j;
  printf("%s: %s\n",
	 __FUNCTION__, str);
  for (i = 0; i < LINHAS; i++){
    for (j = 0; j < COLUNAS; j++)
      printf("%4d", mat[i][j]);
    printf("\n");
  }
}
void zera_diagonal (int mat[][COLUNAS]) {
  int i, j;
  for (i = 0; i < LINHAS; i++)
    for (j = 0; j < COLUNAS; j++)
      if (i == j)
	,*(mat[0] + i * COLUNAS + j) = 0;
}
int main() {
  int M[LINHAS][COLUNAS];
  le (M);
  imprime (M, "Original");
  zera_diagonal (M);
  imprime (M, "Modificada");
  return 0;
}
#+END_SRC
#+latex: \end{multicols}

