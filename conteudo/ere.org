# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Apresentação \linebreak Algoritmos e Programação
#+Subtitle: *INF01202* \linebreak (ERE 2020/1)
#+Author: Prof. Lucas Mello Schnorr \linebreak Prof. Renan Maffei
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}

* Os professores

Prof. Lucas M. Schnorr \hfill \to aulas téoricas
+ Prédio 43425, Sala 202
+ [[http://www.inf.ufrgs.br/~schnorr][http://www.inf.ufrgs.br/~schnorr]]
+ schnorr@inf.ufrgs.br

#+latex: \vfill

Prof. Renan Maffei \hfill \to práticas
+ Prédio 43424, Sala 224
+ [[http://www.inf.ufrgs.br/~rqmaffei][http://www.inf.ufrgs.br/~rqmaffei]]
+ rqmaffei@inf.ufrgs.br
     
* Motivação \to Adquirir *Pensamento Computacional*

- /Computational Thinking/ (Pensamento Computacional)
- Habilidades e limites da computação
- Mapear problemas em algo computacional
- Pensar como cientistas da computação
- /Computational Problem Solving/

* Objetivo Geral

Esta disciplina tem por objetivo introduzir conhecimento e técnicas
necessários para projeto e desenvolvimento de soluções de problemas,
através da construção de algoritmos e programas que utilizam os
princípios da programação estruturada.

* Objetivos Específicos

O aluno que cursou esta disciplina deve ser capaz de analisar
problemas e elaborar programas que os solucionem, utilizando para isto
a linguagem de programação C.

Deve dominar os comando básicos, estruturar os dados em tipos simples
e estruturados, utilizar conceitos de subprogramação e recursão, além
de manipular arquivos.

* Sumário de objetivos

1. Análise do problema
2. Escolha de uma solução para resolver o problema
   - Frequentemente temos mais de uma possibilidade
3. Construção do _algoritmo_ que implementa a solução do problema
4. Escrever o algoritmo em uma linguagem de programação (Linguagem C)
5. Teste/Execução do programa

* Abrangência de tópicos

#+BEGIN_CENTER
noção de algoritmo, dado, variável, instrução e programa; construções
básicas: atribuição, leitura e escrita; estruturas de controle:
seqüência, seleção e iteração; tipos de dados escalares: inteiros,
reais, caracteres, strings; tipos estruturados básicos: vetores,
matrizes, registros e strings; subprogramas: funções com e sem
retorno; recursão; arquivos.
#+END_CENTER

* Funcionamento das aulas

Sempre consulte o Moodle Institucional da UFRGS (https://moodle.ufrgs.br)
- Turma J: https://moodle.ufrgs.br/course/view.php?id=74643
- Turma I: https://moodle.ufrgs.br/course/view.php?id=74642

As aulas teóricas serão assíncronas.
- Vídeos pré-gravados (como este) serão disponibilizados toda semana

As aulas práticas serão síncronas, durante o horário das aulas práticas.
- Acompanhe o link que será disponibilizado no Moodle.

* Recursos das aulas teóricas

- Quadro virtual para rabiscos
- Editor de texto para programação
- Terminal para executar comandos de compilação e execução
- Tela com a projeção dos slides

(vamos ver uma demonstração)

* Plano, cronograma, bibliografia, projeto

+ Súmula, conteúdo programático, bibliografia e cronograma
+ Procedimentos didáticos
+ Avaliação
  
#+BEGIN_CENTER
Consulte no Portal do Aluno da UFRGS (ERE 2020/1).
#+END_CENTER

Vamos revisar juntos alguns elementos.

* Bibliografia Básica Essencial
- Damas, Luis. Linguagem C. Rio de Janeiro: LTC, c2007. ISBN 9788521615194.
- Nina Edelweiss e Maria Aparecida Castro Livi.. Algoritmos e
  Programação: com exemplos em Pascal e C. Série de Livros Didáticos
  Informática UFRGS. Porto Alegre: Bookman, 2014. ISBN 9788582601891
  (disponível online através do SABI+).
- Salvetti, Dirceu Douglas; Barbosa, Lisbete Madsen. Algoritmos. Sao
  Paulo: Makron Books, c1998. ISBN 853460715X.
* Bibliografia Básica
- Deitel, Harvey M.. C How to Program. Estados Unidos: Prentice-Hall, 2007. ISBN 9780132404167.
- Goodrich, Michael T.; Tamassia, Roberto. Projeto de algoritmos
  :fundamentos, análise e exemplos da internet. Porto Alegre: Bookman, 2004. ISBN 8536303034.
- Harbison, Samuel P., III. Steele, Guy L., Jr.. C: manual de referência. Rio de Janeiro: Ciência Moderna, 2002. ISBN 8573932295.
- Kernighan, Brian W.; Ritchie, Dennis M.. The C programming language. Englewood Cliffs: Prentice Hall, c1988. ISBN 0131103628.
- Orth, Afonso Inacio. Algoritmos e programação :com resumo das linguagens pascal e C. Porto Alegre: AIO, c2001.
- Senne, Edson Luiz França. Curso de programação em C. São Paulo: Visual Books, 2009. ISBN 9788575022450.
- Ziviani, N.. Projeto de Algoritmos Com Implementações em Pascal e
  C. THOMSON PIONEIRA, 2004. ISBN 8522103909.
* Critérios de avaliação

A avaliação será feita a partir da nota das atividades práticas semanais
- da primeira área (AP1),
- da segunda área (AP2) e
- do Trabalho Final (TF) -- este em duplas como atividade extra-classe.

#+latex: \pause

Média Final (MF) = 0,35 * AP1 + 0,45 * AP2 + 0,20 * TF

#+latex: \pause

Conversão

| MF >= 8,5       | Conceito A                    |
| 8,5 > MF >= 7,5 | Conceito B                    |
| 7,5 > MF >= 6,0 | Conceito C                    |
| MF < 6,0        | ver Atividades de Recuperação |

#+latex: \pause

Detalhamentos
- FF é inaplicável (Parágrafo 2o, do Artigo 44, da Resolução no 11/2013 do CEPE) 
- Se estudante deixar de participar, conceito será NI (Não Informado)
  com a justificativa ``COVID-19'', tratado até o fim de 2020/2, após
  o fim da pandemia

* Atividades de Recuperação Previstas

*Recuperação Intermediária*

Após abordado o conteúdo Arranjos Multidimensionais será calculada a
nota AP1. O aluno que não tiver atingido AP1 >= 6,0, poderá realizar
uma atividade de recuperação. Feita a recuperação, o novo valor de AP1
será a média entre seu valor anterior e a nota da recuperação.

AP1_nova = (AP1_velha + AP1_recuperação)/2

#+latex: \pause\vfill

*Recuperação Final*

Ao final do semestre, os alunos que não tiverem atingido desempenho
suficiente para a aprovação (MF >= 6.0), poderão realizar uma
atividade avaliativa geral de recuperação, que versará sobre todo o
conteúdo da disciplina. Se a média entre a prova de recuperação e a
Média Final for maior ou igual a 6,0, o aluno será aprovado com C.

Se em recuperação, calcula-se

MF_nova = (MF_velha + Recuperação)/2

Se MF_nova >= 6.0, o Conceito é C.

* Algoritmo para avaliação

Lá no final do semestre

#+BEGIN_SRC C
Se matriculado mas não participou das atividades de ensino
     Conceito = NI
Senão MF >= 8.5
     Conceito = A
Senão MF >= 7.5
     Conceito = B
Senão MF >= 6.0
     Conceito = C
Senão
     Em recuperação
#+END_SRC

* Algoritmo para avaliação (no caso de recuperação)


#+BEGIN_SRC C
Se em recuperação
   MF = (MF + Recuperação)/2

Se MF >= 6.0
   Conceito = C
Senão
   Conceito = D // Reprovado
#+END_SRC

* Ferramenta AVA

#+BEGIN_CENTER
Sempre consulte o Moodle Institucional da UFRGS

(https://moodle.ufrgs.br)
#+END_CENTER

Por turma
- Turma I: https://moodle.ufrgs.br/course/view.php?id=74642
- Turma J: https://moodle.ufrgs.br/course/view.php?id=74643

* Cronograma
** Texto
:PROPERTIES:
:BEAMER_col: 0.4
:END:

Disponível no Moodle.

Vamos revisá-lo juntos.

#+latex: \vspace{2cm}

Encontros síncronos (AP):
- Turma I \to Sex 13:30
- Turma J \to Sex 15:30

** Esquerda
:PROPERTIES:
:BEAMER_col: 0.6
:END:

#+latex: \vspace{-2cm}
#+attr_latex: :width 1.1\textwidth
[[../cronograma/cronograma.pdf]]



