# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Algoritmos
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS: title:nil H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{systeme}

#+latex: \newcommand{\mytitle}{Revisão Aula 19}
#+latex: \mytitleslide

* O que vimos na última aula?

#+latex: \pause

Tipos de dados de usuário
- Ir além do tradicional /int/, /float/, ...

#+latex: \pause

Estruturas
- Diferenças com vetores
- Integração de um novo tipo (de usuário) no programa
- Inicialização de variáveis
- Acesso aos campos da estrutura
  - Quando se usa &, quando não se usa (no /scanf/ por exemplo)
- Atribuição de variáveis do tipo ~struct~
- Aninhamento de tipos de usuário (ciclos não são possíveis)
- Vetores de estruturas /versus/ Estruturas com vetores
- Declaração de variáveis de tipos de usuário

* Exercício #1

1/ Faça uma função que leia o nome e as 3 notas de 1 aluno, calcule a
média aritmética e o conceito obtido, armazenando todas estas
informações em uma estrutura ~aluno~. 2/ Enriqueça o programa anterior,
de modo que armazene informações referentes a NRALUNOS alunos.

Utilize o código abaixo para começar.
#+BEGIN_SRC C
#include <stdio.h>
#include <string.h>
#define TAMANHO 100 // maior nome possível
#define NRALUNOS 3  // número de alunos da turma
#define NRNOTAS 3   // número de notas
struct aluno {
  char nome[TAMANHO];
  float nota[NRNOTAS]; // vetor é um tipo de variável (indexada)
  float media;
  char conceito;
};
int main()
{
  struct aluno alunos[NRALUNOS] = {0};
  //...
  return 0;
}
#+END_SRC

* (#1) Módulo principal (~rev-a31-principal.c~)

#+BEGIN_SRC C :tangle e/rev-a31-principal.c
#include <stdio.h>
#include "rev-a31-aluno.h"
#define NRALUNOS 3 // número de alunos da turma
int main()
{
  struct aluno alunos[NRALUNOS] = {0};
  int i, j;
  for (i = 0; i < NRALUNOS; i++) {
    alunos[i] = le();
    mostra(alunos[i]);
  }
  for (i = 0; i < NRALUNOS; i++) {
    alunos[i] = def_media(alunos[i]);
    mostra(alunos[i]);
  }
  for (i = 0; i < NRALUNOS; i++) {
    alunos[i] = def_conceito(alunos[i]);
    mostra(alunos[i]);
  }
  return 0;
}
#+END_SRC
* (#1) Módulo aluno, cabeçalho (~rev-a31-aluno.h~)
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a31-aluno.h :main no
#include <stdio.h>
#include <string.h>
#define NRNOTAS 3  // número de notas
struct aluno {
  char nome[15 + 1];
  float nota[NRNOTAS];
  float media;
  char conceito;
};
struct aluno le (void);
void mostra (struct aluno aluno);
struct aluno def_media (struct aluno aluno);
struct aluno def_conceito (struct aluno aluno);
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a31-aluno.c~) P1
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a31-aluno.c :main no
#include "rev-a31-aluno.h"
void limpa_buffer() {
  char c;
  while ((c = getchar()) != '\n' && c != EOF);
}
struct aluno le (void) {
  struct aluno ret = {0};
  int i;
  printf("Nome: ");
  fgets(ret.nome, 15, stdin);
  ret.nome[strlen(ret.nome)-1] = '\0';
  for (i = 0; i < NRNOTAS; i++){
    printf("Nota %d: ", i);
    scanf("%f", &ret.nota[i]); limpa_buffer();
  }
  return ret;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a31-aluno.c~) P2
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a31-aluno.c :main no
void mostra (struct aluno aluno) {
  int j;
  printf("Aluno \'%s\' (Notas: ", aluno.nome);
  for (j = 0; j < NRNOTAS; j++) {
    printf("%.2f", aluno.nota[j]);
    if (j+1 < NRNOTAS) printf(" ");
  }
  printf(")");
  if (aluno.media > 0) {
    printf(" Média: %.2f", aluno.media);
  }
  if (aluno.conceito != '\0') {
    printf(" Conceito: %c", aluno.conceito);
  }
  printf("\n");
  return;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a31-aluno.c~) P3
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a31-aluno.c :main no
struct aluno def_media (struct aluno aluno) {
  int i;
  aluno.media = 0;
  for (i = 0; i < NRNOTAS; i++){
    aluno.media += aluno.nota[i];
  }
  aluno.media /= NRNOTAS;
  return aluno;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a31-aluno.c~) P4
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a31-aluno.c :main no
struct aluno def_conceito (struct aluno aluno) {
  if (aluno.media > 0 && aluno.media < 6.0) {
    aluno.conceito = 'D';
  }else if (aluno.media >= 6.0 && aluno.media < 7.5) {
    aluno.conceito = 'C';
  }else if (aluno.media >= 7.5 && aluno.media < 8.5) {
    aluno.conceito = 'B';
  }else if (aluno.media >= 8.5) {
    aluno.conceito = 'A';
  }else {
    aluno.conceito = '\0';
  }
  return aluno;
}
#+END_SRC
* Bonus: espaço ocupado por estruturas

Qual o espaço ocupado por ~struct elemento~?

Arquivo: ~rev-a31-espaco.c~
#+attr_latex: :options fontsize=\large
#+BEGIN_SRC C :tangle e/rev-a31-espaco.c
#include <stdio.h>

struct elemento {
  char name[2];
  int atomic_number;
  double atomic_weight;
  char metallic;
};

int main() {
  printf ("%d\n", sizeof(struct elemento));
  return 0;
}
#+END_SRC

