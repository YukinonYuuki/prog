# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Revisão Aula 03
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}

* Configuração                                                     :noexport:

#+BEGIN_SRC emacs-lisp
(setq org-latex-listings 'minted
      org-latex-packages-alist '(("" "minted"))
      org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
(setq org-latex-minted-options
       '(("frame" "lines")
         ("fontsize" "\\scriptsize")))
#+END_SRC

#+RESULTS:
| frame    | lines       |
| fontsize | \scriptsize |

* Comando de *Atribuição*

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula03-SequencialExpressoes_slide_17.pdf}{Prof. Mara Abel}

#+BEGIN_CENTER
Do lado direito da atribuição, temos uma *expressão*.
#+END_CENTER


* Vejamos um exemplo

#+BEGIN_SRC C :tangle exemplo-problema-atribuicao.c
/* Program que calcula o número mínimo de notas baseado em um valor */
#include <stdio.h>
int main() {
  int valor; //Entrada
  int valor, nota100, nota50, nota20, nota10, nota5, nota1, num_notas; //Saída
  printf("Insira um valor inteiro\n");
  scanf("%d", &valor);

  valor % 100 = nota100;
  nota100 % 50 = nota50;
  nota50 % 20 = nota20;
  nota20 % 10 = nota10;
  nota10 % 5 = nota5;
  nota5 % 1 = nota1;
  nota100 + nota50 + nota20 + nota10 + nota5 + nota1 = num_notas;
  printf("O número mínimo de notas é %d\n", num_notas) ;
  return 0;
}
#+END_SRC

#+BEGIN_CENTER
Qual é o _problema_ do programa acima?
#+END_CENTER

#+latex: \pause

#+begin_src shell :results output
gcc exemplo-problema-atribuicao.c -o exemplo-problema-atribuicao
./exemplo-problema-atribuicao
#+end_src

#+RESULTS:


* Exercício

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_16.pdf}{Prof. Claudio Jung}

* Análise e Definição do Problema

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_17.pdf}{Prof. Claudio Jung}

* Algoritmo

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_18.pdf}{Prof. Claudio Jung}

* Programa (página 1)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_19.pdf}{Prof. Claudio Jung}

* Programa (página 2)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_20.pdf}{Prof. Claudio Jung}

* Testes

#+attr_latex: :options fontsize=\tiny
#+BEGIN_SRC C :tangle exemplo-notas.c
/* Calcula quantidade de cada cédula (ou moeda) tal que a soma dos
   valores totalize um valor inteiro dado.
   Entrada: valor inteiro
   Saida: quandidade de cedulas/moedas de 100, 50, 20, 10, 5, 2 e 1
   reais */
#include <stdio.h>
int main( )
{
  int valor, v; //valores inteiros lido e usado nos cálculos
  int n100, n50,n20,n10,n5,n2,n1;
  printf("Informe valor inteiro:");
  scanf("%d", &valor);
  v = valor; // copia, para preservar valor lido
  n100 = v/100; // RESULTADO DA DIVISÃO INTEIRA POR 100
  v = v%100;    // RESTO DA DIVISÃO INTEIRA POR 100
  n50 = v/50;
  v = v%50;
  n20 = v/20;
  v = v%20;
  n10 = v/10;
  v = v%10;
  n5 = v/5;
  v = v % 5;
  n2 = v/2;    // RESULTADO DA DIVISÃO INTEIRA POR 2
  n1 = v%2;    // RESTO DA DIVISÃO INTEIRA POR 2

  //quebra 2 linhas e insere caracteres ,00 depois do valor:
  printf("\n\nValor lido: R$%d,00\n",valor); // insere vírgula zero
  printf("notas de 100: %d\n",n100);
  printf("notas de 50: %d\n",n50);
  printf("notas de 20: %d\n",n20);
  printf("notas de 10: %d\n",n10);
  printf("notas de 5: %d\n",n5);
  printf("notas de 2: %d\n",n2);
  printf("notas de 1: %d\n",n1);
  return 0;
}
#+END_SRC

* Exercício para casa

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula03-algoritmo_e_estrutura_C_slide_22.pdf}{Prof. Claudio Jung}


