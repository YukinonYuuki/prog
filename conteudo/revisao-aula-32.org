# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Revisão Aula 32
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}
#+LATEX_HEADER: \usepackage{amsmath}
#+LATEX_HEADER: \usepackage{systeme}

* O que vimos na última aula?

~typedef~: nomeia um novo tipo estruturado ~struct~

#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C
typedef struct { // Declaração de aluno_t
  char nome[100];
  char conceito;
} aluno_t;

aluno_t a1, a2; // Declaração de duas variáveis do novo tipo
#+END_SRC

#+latex: \pause\vfill

Operador seta ~->~: equivale ao dereferenciamento e operador ponto

#+BEGIN_SRC C
void imprime1 (aluno_t *a) {
  printf("Nome: %s\n", a->nome); 
  printf("Conceito: %c\n", a->conceito);
}
void imprime2 (aluno_t *a) {
  printf("Nome: %s\n", (*a).nome); 
  printf("Conceito: %c\n", (*a).conceito);
}
#+END_SRC

* Exercício #1

#+BEGIN_CENTER
_Refazer o exercício da aula anterior_

(a) com o comando ~typedef~ e o (b) com o emprego do operador seta.
#+END_CENTER

*Parte #1*: Faça uma função que leia o nome (até 15 caracteres) e as 3
notas de 1 aluno, calcule a média aritmética e o conceito obtido,
armazenando todas estas informações em uma estrutura ~aluno~.

*Parte #2:* Altere o programa anterior, de modo que armazene informações
referentes a NRALUNOS alunos.

Utilize o código abaixo para começar.
#+attr_latex: :options fontsize=\tiny
#+BEGIN_SRC C
#include <stdio.h>
#include <string.h>
#define NRALUNOS 3 // número de alunos da turma
#define NRNOTAS 3  // número de notas
struct aluno {
  char nome[15 + 1];
  float nota[NRNOTAS]; // vetor é um tipo de variável (indexada)
  float media;
  char conceito;
};
int main()
{
  struct aluno alunos[NRALUNOS];
  //...
  return 0;
}
#+END_SRC

* (#1) Módulo principal (~rev-a32-principal.c~)

#+BEGIN_SRC C :tangle e/rev-a32-principal.c
#include <stdio.h>
#include "rev-a32-aluno.h"
#define NRALUNOS 3 // número de alunos da turma
int main()
{
  aluno_t alunos[NRALUNOS] = {0};
  int i;
  for (i = 0; i < NRALUNOS; i++) {
    le(&alunos[i]);
    mostra(&alunos[i]);
  }
  for (i = 0; i < NRALUNOS; i++) {
    def_media(&alunos[i]);
    mostra(&alunos[i]);
  }
  for (i = 0; i < NRALUNOS; i++) {
    def_conceito(&alunos[i]);
    mostra(&alunos[i]);
  }
  return 0;
}
#+END_SRC
* (#1) Módulo aluno, cabeçalho (~rev-a32-aluno.h~)
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a32-aluno.h :main no
#include <stdio.h>
#include <string.h>
#define NRNOTAS 3  // número de notas
typedef struct {
  char nome[15 + 1];
  float nota[NRNOTAS];
  float media;
  char conceito;
} aluno_t;
void le (aluno_t *aluno);
void mostra (aluno_t *aluno);
void def_media (aluno_t *aluno);
void def_conceito (aluno_t *aluno);
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a32-aluno.c~) P1
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a32-aluno.c :main no
#include "rev-a32-aluno.h"
void limpa_buffer() {
  char c;
  while ((c = getchar()) != '\n' && c != EOF);
}
void le (aluno_t *aluno) {
  int i;
  printf("Nome: ");
  fgets(aluno->nome, 15, stdin);
  aluno->nome[strlen(aluno->nome)-1] = '\0';
  for (i = 0; i < NRNOTAS; i++){
    printf("Nota %d: ", i);
    scanf("%f", &aluno->nota[i]); limpa_buffer();
  }
  return;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a32-aluno.c~) P2
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a32-aluno.c :main no
void mostra (aluno_t *aluno) {
  int j;
  printf("Aluno \'%s\' (Notas: ", aluno->nome);
  for (j = 0; j < NRNOTAS; j++) {
    printf("%.2f", aluno->nota[j]);
    if (j+1 < NRNOTAS) printf(" ");
  }
  printf(")");
  if (aluno->media > 0) {
    printf(" Média: %.2f", aluno->media);
  }
  if (aluno->conceito != '\0') {
    printf(" Conceito: %c", aluno->conceito);
  }
  printf("\n");
  return;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a32-aluno.c~) P3
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a32-aluno.c :main no
void def_media (aluno_t *aluno) {
  int i;
  aluno->media = 0;
  for (i = 0; i < NRNOTAS; i++){
    aluno->media += aluno->nota[i];
  }
  aluno->media /= NRNOTAS;
  return;
}
#+END_SRC
* (#1) Módulo aluno, implem. (~rev-a32-aluno.c~) P4
#+attr_latex: :options fontsize=\normalsize
#+BEGIN_SRC C :tangle e/rev-a32-aluno.c :main no
void def_conceito (aluno_t *aluno) {
  if (aluno->media > 0 && aluno->media < 6.0) {
    aluno->conceito = 'D';
  }else if (aluno->media >= 6.0 && aluno->media < 7.5) {
    aluno->conceito = 'C';
  }else if (aluno->media >= 7.5 && aluno->media < 8.5) {
    aluno->conceito = 'B';
  }else if (aluno->media >= 8.5) {
    aluno->conceito = 'A';
  }else {
    aluno->conceito = '\0';
  }
  return;
}
#+END_SRC
