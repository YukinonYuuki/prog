# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Comando iterativo =for=
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}

* Configuração                                                     :noexport:

#+BEGIN_SRC emacs-lisp
(setq org-latex-listings 'minted
      org-latex-packages-alist '(("" "minted"))
      org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
(setq org-latex-minted-options
       '(("frame" "lines")
         ("fontsize" "\\scriptsize")))
#+END_SRC

#+RESULTS:
| frame    | lines       |
| fontsize | \scriptsize |
* Sumário

Laços iterativos (/loops/)
- Motivação com exemplos
- O comando =for=
- Estudos de caso

* Motivação com enunciado (1 aluno)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_06.pdf}{Prof. Claudio Jung}

* Possível solução

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_05.pdf}{Prof. Mara Abel}

* Motivação com enunciado (turma de 5 alunos)

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_09.pdf}{Prof. Claudio Jung}

* Possível solução

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_06.pdf}{Prof. Mara Abel}

* Uma versão melhorada com menos variáveis

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_25.pdf}{Prof. Edison Pignaton de Freitas}

* Uma versão ainda melhor, com menos código!

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_08.pdf}{Prof. Mara Abel}

* Repetir, repetir, repetir, ... (/aka/ laços de repetição)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_27.pdf}{Prof. Edison Pignaton de Freitas}

* Plano da semana

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_09.pdf}{Prof. Mara Abel}

* O comando =for=

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_15.pdf}{Prof. Claudio Jung}

* Detalhamento

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_16.pdf}{Prof. Claudio Jung}

* Sintaxe

Todas as expressões do comando =for= são opcionais.

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_30.pdf}{Prof. Edison Pignaton de Freitas}
#+latex: %\cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_17.pdf}{Prof. Claudio Jung}

* Voltando ao alg. do exemplo motivacional -- Exemplo #1

alg. = algoritmo

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_32.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #1: Em C

Com comando de incremento
- Do valor 1 até menor igual que 5

#+BEGIN_SRC C :tangle a07-for-aprovado-reprovado.c
// Determina se 5 alunos foram aprovados ou reprovados
#include <stdio.h>
int main() {
  int contador, numaluno;
  float media;
  // Controle de repetição: executará 5 vezes
  for(contador = 1; contador <= 5; contador++) {
    // Comandos a serem repetidos
    printf("Informe numero e nota do aluno %d: ", contador);
    scanf("%d", &numaluno);
    scanf("%f", &media);
    if (media >=6)
      printf("O aluno %d foi aprovado!\n", numaluno);
    else
      printf("O aluno %d for reprovado!\n", numaluno);
  }
  return 0;
}
#+END_SRC

* Exemplo #1: Em C (decremento)

Com comando de _decremento_
- Do valor 5 até o maior que 0

#+BEGIN_SRC C :tangle a07-for-aprovado-reprovado-dec.c
// Determina se 5 alunos foram aprovados ou reprovados
#include <stdio.h>
int main() {
  int contador, numaluno;
  float media;
  // Controle de repetição: executará 5 vezes
  for(contador = 5; contador > 0; contador--) {
    // Comandos a serem repetidos
    printf("Informe numero e nota do aluno %d: ", contador);
    scanf("%d", &numaluno);
    scanf("%f", &media);
    if (media >=6)
      printf("O aluno %d foi aprovado!\n", numaluno);
    else
      printf("O aluno %d for reprovado!\n", numaluno);
  }
  return 0;
}
#+END_SRC

* Exemplo #2 (enunciado)

#+BEGIN_CENTER
Faça um programa que imprima, dentro de um

intervalo, todos os números pares.
#+END_CENTER

#+latex: \pause\vfill

Planejamento
- Entradas?
  - Validação da entrada
- Saídas?
- Processamento

* Exemplo #2 (código)

Perceba o incremento de 2 em 2.

#+BEGIN_SRC C :tangle a07-pares.c
// Imprime numeros pares de um intervalo dado
// garante que o primeiro nro é menor do que o segundo
#include <stdio.h>
int main() {
  int val1, val2, inic, fim, controle;
  printf("Informe 2 numeros naturais: ");
  scanf("%d%d", &val1, &val2);
  if (val1 > val2){
    inic = val2; fim = val1;
  }else{
    inic = val1; fim = val2;
  }
  if (inic%2)
    inic = inic + 1; // gera seq apenas com nros pares!
  for ( controle = inic; controle <= fim; controle = controle+2)
    printf("%d ", controle);
  printf("\n")
  return 0;
}
#+END_SRC

* Vocês lembram da tabela ASCII?

#+latex: \cortesia{../../../Algoritmos/Marcelo/aulas/aula07/aula07_slide_29.pdf}{Prof. Marcelo Walter}

* Tabela ASCII (mais completa)

[[./img/asciifull.jpg]]

#+attr_latex: :width .5\linewidth
[[./img/extend.jpg]]

* Exemplo #3 (enunciado)

#+BEGIN_CENTER
Faça um programa que imprima a tabela ASCII

de =A= até =z=, representando na saída o valor

em caractere e em bases octal, decimal e hexadecimal.
#+END_CENTER

#+latex:\pause\vfill

#+BEGIN_SRC C :tangle a07-ascii.c
#include <stdio.h>
int main() {
  char letra;
  for (letra = 'A'; letra <= 'z'; letra++)
    printf("[%c] %03o %03d %03x\n", letra, letra, letra, letra);
  return 0;
}
#+END_SRC

#+latex: \vfill\pause

Qual o valor da variável ``letra'' antes no comando =return 0;=?

#+latex: \vfill\pause

#+BEGIN_SRC C :tangle a07-ascii-v2.c
#include <stdio.h>
int main() {
  char letra;
  for (letra = 'A'; letra <= 'z'; letra++)
    printf("[%c] %03o %03d %03x\n", letra, letra, letra, letra);
  printf("O laço terminou. O valor da letra é:\n"
	 "[%c] %03o %03d %03x\n", letra, letra, letra, letra);
  return 0;
}
#+END_SRC

* Variáveis de controle para o comando =for=

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula07-for_slide_25.pdf}{Prof. Claudio Jung}
* Exemplo #4 (enunciado)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_39.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #4 (estratégia com acumulador)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_40.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #4 (código)

#+BEGIN_SRC C :tangle a07-idades.c
// Calcula a idade média de 5 pessoas
# include <stdio.h>
int main () {
  int soma_idades, idade, contador;
  float media_idades;
  soma_idades = 0; // inicializa acumulador em 0
  for (contador = 1; contador <= 5; contador ++) {
    printf("informe idade [%d]: ", contador); // utiliza contador
    scanf ("%d", &idade);
    // vai acumulando idades lidas
    soma_idades = soma_idades + idade;
  }
  // cast, para resultado ser real
  media_idades = (float) soma_idades / 5;
  printf("A media das 5 idades lidas eh %.2f.\n", media_idades);
}
#+END_SRC

* Exemplo #5 (enunciado)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_43.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #5 (estratégia com contador)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_44.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #5 (código)

#+BEGIN_SRC C :tangle a07-idades-18.c
/* Calcula a idade média de 5 pessoas e conta menores de idade do grupo: */
# include <stdio.h>
int main () {
  int soma_idades, idade, contador, conta_menos_de_18;
  float media_idades;
  soma_idades = 0;       // inicializa acumulador em 0
  conta_menos_de_18 = 0; // inicializa contador em 0
  for (contador = 1; contador <= 5; contador ++) {
    printf("informe idade [%d]: ", contador);
    scanf ("%d", &idade);
    if (idade < 18)
      conta_menos_de_18++; // incrementa 1 no contador
    // vai acumulando idades lidas
    soma_idades = soma_idades + idade;
  }
  // cast, para resultado ser real
  media_idades = (float) soma_idades/5;
  printf("A media das 5 idades lidas eh %.2f.\n", media_idades);
  printf("Existem %d pessoas menores de 18 anos.\n", conta_menos_de_18);
}

#+END_SRC
* Reflexão sobre valores fixos no código

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_47.pdf}{Prof. Edison Pignaton de Freitas}

* Uso de =#define= (como já visto na aula sobre tipos)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_49.pdf}{Prof. Edison Pignaton de Freitas}

* Exemplo #6 (código)

#+BEGIN_SRC C :tangle a07-idades-contante.c
// Calcula a idade média de NUMPESSOAS pessoas
#include <stdio.h>
#define NUMPESSOAS 5
int main () {
  int soma_idades, idade, contador;
  float media_idades;
  soma_idades = 0; // inicializa acumulador em 0
  for (contador = 1; contador <= NUMPESSOAS; contador ++) {
    printf("informe idade [%d]: ", contador); // utiliza contador
    scanf ("%d", &idade);
    // vai acumulando idades lidas
    soma_idades = soma_idades + idade;
  }
  // cast, para resultado ser real
  media_idades = (float) soma_idades / NUMPESSOAS;
  printf("A media das %d idades lidas eh %.2f.\n", NUMPESSOAS, media_idades);
}
#+END_SRC
* Dúvidas?

#+BEGIN_CENTER
Alguma dúvida?

Hora de ver coisas /off-the-record/ com o comando =for=.
#+END_CENTER

* Exercício #1 (Fatorial)

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula07_slide_53.pdf}{Prof. Edison Pignaton de Freitas}

* Exercício #2 (Fibonacci)

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula07-For2017_slide_30.pdf}{Prof. Mara Abel}

* Exercício #2 (Entendendo Fibonacci e Estratégia)

#+BEGIN_CENTER
Sugestão de video

https://www.youtube.com/watch?v=eVbOxWVC_GY

Usar o comando =for=
#+END_CENTER





