# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: Algoritmos
#+Subtitle: *INF01202*
#+Author: Prof. Lucas Mello Schnorr
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS: title:nil H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel.tex}

#+latex: \newcommand{\mytitle}{Comando de seleção \texttt{switch-case}}
#+latex: \mytitleslide

* Configuração                                                     :noexport:

#+BEGIN_SRC emacs-lisp
(setq org-latex-listings 'minted
      org-latex-packages-alist '(("" "minted"))
      org-latex-pdf-process
      '("pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"
        "pdflatex -shell-escape -interaction nonstopmode -output-directory %o %f"))
(setq org-latex-minted-options
       '(("frame" "lines")
         ("fontsize" "\\scriptsize")))
#+END_SRC

#+RESULTS:
| frame    | lines       |
| fontsize | \scriptsize |
* Visão geral de comandos para desvio

- Aula 04: Comando condicional =if=
  - Com um ou múltiplos comandos
- Aula 05: Comando condicional =if-else=
  - Com um ou múltiplos comandos
- Aula 06 (hoje!): Comando =switch-case=

* Sumário

- Motivação para =switch-case= com exemplos =if-else=
- Funcionamento do =switch-case=
- Estudos de caso
  - Calculadora
  - Preço de um produto
  - Estado civil
  - Notas
- Exercício
  - Mapeamento da Tabela
  - Ovos de Páscoa

* Relembrando o fluxograma do =if=...

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula06-Switch_slide_02.pdf}{Prof. Mara Abel}

* ... e do =if-else=

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula06-Switch_slide_03.pdf}{Prof. Mara Abel}

* Dado um problema

Imprimir ma mensagem de acordo com um código recebido

| *Código* | *Mensagem a ser impressa* |
|--------+-------------------------|
|      1 | "Mensagem 1"            |
|      2 | "Mensagem 2"            |
|      3 | "Mensagem 3"            |
|      4 | "Mensagem 4"            |

Para qualquer valor diferente de 1, 2, 3 ou 4:
- apresentar a mensagem "Mensagem de erro"

* Possível solução usando apenas =if...=

Veja em [[./a06-mensagem_v0.c]]

#+begin_src C :tangle e/a06-mensagem_v0.c
/* Imprime uma mensagem, de acordo com um código lido - solução usando if simples
   Entrada: valor (inteiro) lido do teclado; Saida: Mensagem na tela */
#include <stdio.h>
int main ( )
{
  int cod;
  printf("Codigo (1 a 4): ");
  scanf ("%d", &cod);
  if (cod == 1)
    printf ("\nMensagem 1\n");
  if (cod == 2)
    printf ("\nMensagem 2\n");
  if (cod == 3)
    printf ("\nMensagem 3\n");
  if (cod == 4)
    printf ("\nMensagem 4\n");
  if (cod < 1 || cod > 4)
    printf ("\nMensagem de erro\n");
  return 0;
}
#+end_src

* ...ou com =if= e =else if=

Veja em [[./a06-mensagem_v1.c]]

#+begin_src C :tangle e/a06-mensagem_v1.c
/* Imprime uma mensagem, de acordo com um código lido - solução usando if simples
   Entrada: valor (inteiro) lido do teclado; Saida: Mensagem na tela */
#include <stdio.h>
int main ( )
{
  int cod;
  printf("Codigo (1 a 4): ");
  scanf ("%d", &cod);
  if (cod == 1)
    printf ("\nMensagem 1\n");
  else if (cod == 2)
    printf ("\nMensagem 2\n");
  else if (cod == 3)
    printf ("\nMensagem 3\n");
  else if (cod == 4)
    printf ("\nMensagem 4\n");
  else if (cod < 1 || cod > 4)
    printf ("\nMensagem de erro\n");
  return 0;
}
#+end_src

* Uma terceira solução com =if=, =else if=, =else=

Veja em [[./a06-mensagem.c]]

#+begin_src C :tangle e/a06-mensagem.c
/* Imprime uma mensagem, de acordo com um código lido - solução usando if simples
   Entrada: valor (inteiro) lido do teclado; Saida: Mensagem na tela */
#include <stdio.h>
int main ( )
{
  int cod;
  printf("Codigo (1 a 4): ");
  scanf ("%d", &cod);
  if (cod == 1)
    printf ("\nMensagem 1\n");
  else if (cod == 2)
    printf ("\nMensagem 2\n");
  else if (cod == 3)
    printf ("\nMensagem 3\n");
  else if (cod == 4)
    printf ("\nMensagem 4\n");
  else
    printf ("\nMensagem de erro\n");
  return 0;
}
#+end_src

Como fica o *fluxograma*?

* Fluxograma do exemplo

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula06-Switch_slide_07.pdf}{Prof. Mara Abel}

* Apresentação do =switch-case=

#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula06_slide_13.pdf}{Prof. Edison Pignaton de Freitas}

* Detalhamento do comando =switch-case=
  
#+latex: \cortesia{../../../Algoritmos/Edison/Teoricas/aula06_slide_14.pdf}{Prof. Edison Pignaton de Freitas}

* Emprego de =switch-case= para o programa da mensagem

Veja em [[./a06-mensagem-switch-case_v1.c]].

Vamos testar!

#+BEGIN_SRC C :tangle e/a06-mensagem-switch-case_v1.c
#include <stdio.h>
int main () {
  int cod;
  printf("Codigo (1 a 4): ");
  scanf ("%d", &cod);
  switch (cod) {
  case 1:
    printf ("Mensagem 1.\n");
  case 2:
    printf ("Mensagem 2.\n");
  case 3:
    printf ("Mensagem 3.\n");
  case 4:
    printf ("Mensagem 4.\n");
  default:
    printf ("Mensagem de erro.\n");
  }
  return 0;
}
#+END_SRC

* Fluxograma do funcionamento do exemplo anterior

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula06-if_ANINHADO_e_switch_slide_16.pdf}{Prof. Claudio Jung}

* Comando de quebra (=break=) dentro do =switch-case=

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula06-if_ANINHADO_e_switch_slide_19.pdf}{Prof. Claudio Jung}

* Exemplo de uso de =break= no =switch-case=

Veja em [[./a06-mensagem-switch-case_v2.c]].

#+BEGIN_SRC C :tangle e/a06-mensagem-switch-case_v2.c
#include <stdio.h>
int main () {
  int cod;
  printf("Codigo (1 a 4): ");
  scanf ("%d", &cod);
  switch (cod) {
    case 1:
      printf ("Mensagem 1.\n");
      break;
    case 2:
      printf ("Mensagem 2.\n");
      break;
    case 3:
      printf ("Mensagem 3.\n");
      break;
    case 4:
      printf ("Mensagem 4.\n");
      break;
    default:
      printf ("Mensagem de erro.\n");
      break;
  }
  return 0;
}
#+END_SRC

* Fluxograma do funcionamento com =break=

#+latex: \cortesia{../../../Algoritmos/Claudio/Teorica/Aula06-if_ANINHADO_e_switch_slide_20.pdf}{Prof. Claudio Jung}

* Estudo de caso #1: Programa da calculadora

- Fazer um programa que simule uma calculadora que executa as quatro operações aritméticas (soma, subtração, produto e divisão).
- As operações válidas são '+', '-', '*', '/' (tipo char).
- O programa deve ler a operação (char) que deverá ser efetuada e os dois valores (operandos-float).
- Emitir mensagem de erro caso não seja uma operação válida.
- Após o cálculo, dar a resposta.

* 

# Veja em [[./a06-calculadora.c]].

#+attr_latex: :options fontsize=\scriptsize
#+BEGIN_SRC C :tangle e/a06-calculadora.c
//a06-calculadora.c - executa uma das quatro operações aritméticas sobre dois operandos
#include <stdio.h>
int main ( )
{
  float operando1, operando2;
  char operador; // variável do tipo char
  printf("Operador: ");
  scanf("%c", &operador);
  printf("Operando 1: ");
  scanf("%f", &operando1);
  printf("Operando 2: ");
  scanf("%f", &operando2);
  switch (operador) { // seletor é 1 caractere
    // constante char: sempre entre aspas simples
  case '+': printf("resultado: %f\n", operando1 + operando2);
    break;
  case '-': printf("resultado: %f\n", operando1 - operando2);
    break;
  case '*': printf("resultado: %f\n", operando1 * operando2);
    break;
  case '/': printf("resultado: %f\n", operando1 / operando2);
    break;
  default: printf ("Operador invalido.\n");
  }
  return 0;
}
#+END_SRC
* Estudo de caso #2: Preço de um produto

- Fazer um programa que calcule o preço de um produto, a partir do
  tempo levado em sua produção somado ao tempo gasto no projeto do
  produto (mínimo 1 mês cada).
- Usar a seguinte a tabela para calcular o preço:

| *Tempo* (meses) | *Preço* (R$) |
|---------------+------------|
|             2 |       1000 |
|             3 |       1500 |
|             4 |       2000 |
|     mais de 4 |       2500 |

* Código

Veja em  [[./a06-preco.c]].

#+attr_latex: :options fontsize=\scriptsize
#+BEGIN_SRC C :tangle e/a06-preco.c
/*Calcula preco a ser cobrado por um servico
  Entrada: tempo de produção e tempo de projeto
  Saida: valor do servico */
#include <stdio.h>
int main ( )
{
  int tempo_prod, tempo_projeto;
  printf("Tempo de projeto: ");
  scanf("%d", &tempo_projeto);
  printf("Tempo de producao: ");
  scanf("%d", &tempo_prod);
  switch (tempo_prod + tempo_projeto) {
    case 2 : printf ("\nPreco: R$ 1.000,00\n");
      break;
    case 3 : printf ("\nPreco: R$ 1.500,00\n");
      break;
    case 4 : printf ("\nPreco: R$ 2.000,00\n");
      break;
    default: printf ("\nPreco: R$ 2.500,00\n");
  }
  return 0;
}
#+END_SRC

* Estudo de caso #3: Estado civil

- Fornecido um código caractere, correspondente a um estado civil,
  devolver por extenso o estado civil correspondente.
- Devem ser aceitas na entrada tanto maiúsculas quanto minúsculas.
- Codificação dos estados civis considerados

| Código | O estado civil por extenso |
|--------+----------------------------|
| S      | Solteiro                   |
| C      | Casado                     |
| D      | Divorciado                 |
| V      | Viúvo                      |

- Qualquer outro caractere de entrada deve ser acusado como estado civil incorreto.

* Código

Veja em [[./a06-estado-civil.c]].

#+attr_latex: :options fontsize=\tiny
#+BEGIN_SRC C :tangle e/a06-estado-civil.c
/*Apresenta o estado civil correspondente ao caractere informado
  Entrada: abreviacao (caracter) do estado civil
  Saida: impressao na tela do estado civil (por extenso) */
#include <stdio.h>
int main ()
{
  char estado_civil;
  printf("Estado Civil (C - Casado, S - Solteiro, D - Divorciado ou V - Viuvo):");
  scanf("%c", &estado_civil);
  switch (estado_civil)
  {
    case 'c':
    case 'C': printf ("Casado\n");
      break;
    case 's':
    case 'S': printf ("Solteiro\n");
      break;
    case 'd':
    case 'D': printf ("Divorciado\n");
      break;
    case 'v':
    case 'V': printf ("Viuvo\n");
      break;
    default: printf ("Estado Civil incorreto\n");
  }
  return 0;
}
#+END_SRC

* Estudo de caso #4: Notas

- Conforme uma nota inteira fornecida, entre 0 e 10, imprimir uma das seguintes mensagens:

| *Nota*  | Mensagem            |
|-------+---------------------|
| 0 a 5 | Reprovado           |
| 6 a 9 | Aprovado            |
| 10    | Aprovado com louvor |

- Em C, esse problema pode ser resolvido tanto por uma sucessão de
  ifs, quanto por um comando switch/case.

* Código

Veja em [[./a06-notas.c]].

#+attr_latex: :options fontsize=\tiny
#+BEGIN_SRC C :tangle e/a06-notas.c
// Recebida uma nota, fornecer uma das seguintes mensagens:
//0 a 6: Reprovado; 7 a 9: Aprovado; 10: Aprovado com louvor.
#include <stdio.h>
int main () {
  int nota;
  printf("Nota (0 a 10): ");
  scanf("%d", &nota);
  if (nota < 0 || nota > 10)
    printf("Nota inválida!\n");
  else
    switch (nota) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        printf("Reprovado\n");
        break;
      case 6:
      case 7:
      case 8:
      case 9:
        printf("Aprovado\n");
        break;
      case 10:
        printf("Aprovado com louvor\n");
    }
  return 0;
}
#+END_SRC

* Condição para uso do =switch-case= (lembrete)

Mas se a nota não for inteira?

#+latex: \pause\vfill

- Nesse caso, em C, apenas ifs podem ser usados para testar as condições.
- Switch/case não é mais uma opção, já que só opera com valores inteiros e derivados.

* Vantagens e desvantagens

*Vantagens*
- O código produzido é mais claro
- A lógica fica mais evidente

#+latex: \pause\vfill

*Desvantagens*
- Serve como alternativa apenas para casos em que sejam testadas
  apenas igualdades envolvendo expressões int, long ou char.
- /Não é capaz de testar intervalos/
  - =if/else= é mais abrangente pois podemos usar expressões relacionadas

* Exercício #1: Problema da Tabela

Faça somente usando =switch-case=.

#+latex: \cortesia{../../../Algoritmos/Mara/Teoricas/Aula06-Switch_slide_37.pdf}{Prof. Mara Abel}

* Exercício #2: Ovos de Páscoa

#+latex: \cortesia{../../../Algoritmos/Marcelo/aulas/aula06/aula06_slide_17.pdf}{Prof. Marcelo Walter}
